{"version":3,"sources":["components/TextField/index.js","utils/API.js","components/MediaCard/index.js","pages/Search.js","pages/Saved.js","components/AppBar/index.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","& > *","margin","spacing","width","form","backgroundColor","SearchTextField","props","classes","react_default","a","createElement","Box","display","alignItems","justifyContent","className","noValidate","autoComplete","TextField","id","label","variant","onChange","handleInputChange","value","searchTerm","API","search","query","axios","get","getBooks","getBook","deleteBook","delete","saveBook","bookData","post","maxWidth","media","height","MediaCard","Card","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","component","authors","color","description","CardActions","Button","size","target","href","link","onClick","action","btnContent","box","marginBottom","gridList","button","Search","_useState","useState","_useState2","Object","slicedToArray","books","setBooks","_useState3","_useState4","setSearchTerm","Container","event","name","then","response","data","catch","length","GridList","cols","map","book","i","key","volumeInfo","imageLinks","thumbnail","join","infoLink","res","console","log","err","textAlign","heading","Saved","useEffect","loadBooks","border","borderColor","_id","flexGrow","menuButton","marginRight","appbar","padding","SearchAppBar","AppBar","position","Toolbar","App","react_router_dom","react_router","exact","path","pages_Search","pages_Saved","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","concat","fetch","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.e57af9ce.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, TextField }from '@material-ui/core';\n\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        '& > *': {\n            margin: theme.spacing(3),\n            width: '40ch',\n            \n        }\n    },\n    form: {\n        backgroundColor: \"white\"\n    }\n}));\n\n\n\nexport default function SearchTextField(props) {\n    const classes = useStyles();\n    \n\n    return (\n        <Box display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n            <form className={classes.root} noValidate autoComplete=\"off\">\n                <TextField className={classes.form} id=\"filled-basic\" label=\"Search Books\" variant=\"filled\" onChange={props.handleInputChange} value={props.searchTerm}/>\n            </form>\n        </Box>\n    );\n}","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  search: function (query) {\n    return axios.get(\"/api/google/\" + query);\n},\n  getBooks: function() {\n    return axios.get(\"/api/books/\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 360,\n  },\n  media: {\n    height: 150,\n  },\n});\n\nexport default function MediaCard(props) {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia\n          className={classes.media}\n          image={props.image}\n          title={props.title}\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h6\" component=\"h2\">\n            {props.title}\n          </Typography>\n          <Typography variant=\"body1\" component=\"p\">\n            {props.authors}\n          </Typography>\n          <Typography variant=\"subtitle2\" color=\"textSecondary\" component=\"p\">\n            {props.description}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" target=\"_blank\" href={props.link}>\n          View Book\n        </Button>\n        <Button component=\"button\" color=\"secondary\" onClick={props.action}>\n          {props.btnContent}\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n","import React, { useState } from 'react';\nimport Textfield from \"../components/TextField\";\nimport API from '../utils/API';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MediaCard from '../components/MediaCard';\nimport GridList from '@material-ui/core/GridList';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\n\nconst useStyles = makeStyles(theme => ({\n    box: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: '20px'\n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center'\n    },\n    button: {\n        backgroundColor: \"#03a9f4\",\n        color: \"white\"\n    }\n}));\n\nfunction Search() {\n    const classes = useStyles();\n\n    const [books, setBooks] = useState([]);\n    const [searchTerm, setSearchTerm] = useState(\"\"); \n  \n\n    const searchBooks = () => {\n        API.search(searchTerm)\n            .then(response => {\n                setBooks(response.data);\n            })\n            .catch(() => {\n                setBooks([]);\n                \n            });\n    }\n\n    const handleInputChange = (event) => {\n        const { value } = event.target;\n        setSearchTerm(value);\n    }\n\n    const saveBook = (bookData) => {\n        API.saveBook({\n            title: bookData.volumeInfo.title,\n            authors: bookData.volumeInfo.authors ? bookData.volumeInfo.authors : 'No authors found',\n            description: bookData.volumeInfo.description\n                ? bookData.volumeInfo.description\n                : 'No synopsis found',\n            image: bookData.volumeInfo.imageLinks\n                ? bookData.volumeInfo.imageLinks.thumbnail\n                : 'https://via.placeholder.com/150.png?text=No+Image+Found',\n            link: bookData.volumeInfo.infoLink\n        })\n            .then(res => console.log(res))\n            .catch(err => console.log(err));\n    }\n\n\n    return (\n        <Container>\n\n            <Textfield handleInputChange={handleInputChange} name=\"title\" searchTerm={searchTerm} />\n            <Box className={classes.box}>\n                <Button className={classes.button} variant=\"contained\" onClick={searchBooks}>\n                    Search\n                </Button>\n            </Box>\n            {books.length ? (\n                <GridList className={classes.gridList} cols={3}>\n                    {books.map((book, i) => (\n                        <MediaCard\n                            key={i}\n                            image={\n                                book.volumeInfo.imageLinks\n                                    ? book.volumeInfo.imageLinks.thumbnail\n                                    : 'https://www.fillmurray.com/640/360'\n                            }\n                            title={book.volumeInfo.title}\n                            authors={book.volumeInfo.authors.join(', ')}\n                            description={\n                                book.volumeInfo.description\n                                    ? book.volumeInfo.description\n                                    : 'No description for this book'\n                            }\n                            link={book.volumeInfo.infoLink}\n                            action={() => {\n                                saveBook(book);\n                            }}\n                            btnContent={'Save Book'}\n                        />\n                    ))}\n                </GridList>\n            ) : (\n                <Typography color=\"primary\" variant=\"h3\" className={classes.box}>\n                </Typography>\n            )}\n        </Container>\n    );\n}\n\nexport default Search;","import React, { useEffect, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport GridList from '@material-ui/core/GridList';\nimport API from '../utils/API';\nimport MediaCard from '../components/MediaCard';\n\nconst useStyles = makeStyles({\n    root: {\n        maxWidth: '100%',\n        justifyContent: 'center',\n        alignItems: 'center',\n        textAlign: 'center',\n        margin: '20px'\n    },\n    heading: {\n        margin: \"25px\",\n        color: \"#03a9f4\"\n \n    },\n    gridList: {\n        width: '100%',\n        height: '100%',\n        justifyContent: 'center'\n    }\n});\n\nfunction Saved() {\n    const classes = useStyles();\n    const [books, setBooks] = useState([]);\n\n    useEffect(() => {\n        loadBooks()\n    }, []);\n\n    const loadBooks = () => {\n    API.getBooks()\n        .then(res => setBooks(res.data))\n        .catch(err => console.log(err));\n    }\n\n    const deleteBook = (id) => {\n        API.deleteBook(id)\n            .then(res => loadBooks())\n            .catch(err => console.log(err));\n    }\n\n    return (\n        <Container border={1} borderColor=\"secondary\" className={classes.root}>\n            <Typography variant=\"h4\" component=\"h1\" className={classes.heading}>\n                Saved Books\n            </Typography>\n            <GridList className={classes.gridList} cols={3}>\n                {books.map((book, i) => (\n                    <MediaCard\n                        key={i}\n                        id={book._id}\n                        image={book.image}\n                        title={book.title}\n                        authors={book.authors}\n                        description={book.description}\n                        link={book.link}\n                        action={() => {\n                            deleteBook(book._id);\n                        }}\n                        btnContent={'Delete Book'}\n                    />\n                ))}\n            </GridList>\n        </Container>\n    );\n}\n\nexport default Saved;","import React from \"react\";\nimport {\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    menuButton: {\n        marginRight: theme.spacing(2)\n    },\n    title: {\n        flexGrow: 1,\n        \n    },\n\n  appbar: {\n    backgroundColor: \"#e64a19\",\n    padding: 20,\n  },\n  button: {\n    color: \"white\",\n    margin: \"auto\",\n    marginRight: theme.spacing(2)\n  },\n}));\n\nexport default function SearchAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={classes.appbar}>\n        <Toolbar>\n          <Typography variant=\"h5\" className={classes.title}>\n            Google Book Search\n          </Typography>\n          <Button color=\"inherit\" href=\"/search\" >\n            Search\n          </Button>\n          <Button color=\"inherit\" href=\"/saved\" >\n            Saved Books\n          </Button>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport \"./App.css\";\nimport Search from './pages/Search';\nimport Saved from './pages/Saved';\nimport AppBar from \"./components/AppBar\";\n\n\nfunction App() {\n  return (\n      <Router>\n              <div>\n                  <AppBar />\n                  <Switch>\n                      <Route exact path={['/', '/search']}>\n                          <Search />\n                      </Route>\n                      <Route exact path=\"/saved\">\n                          <Saved />\n                      </Route>\n                  </Switch>\n              </div>\n      </Router>\n  );\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}